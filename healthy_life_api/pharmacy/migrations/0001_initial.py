# Generated by Django 5.1.2 on 2024-12-08 11:10

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyCard',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_status', models.PositiveSmallIntegerField(choices=[(0, 'activated'), (1, 'blocked')], default=0, verbose_name='status of card')),
                ('bonuses', models.PositiveIntegerField(default=0, verbose_name='amount of bonuses')),
            ],
            options={
                'verbose_name': 'loyalty card',
                'verbose_name_plural': 'loyalty cards',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_end_promotion', models.DateTimeField(verbose_name='time end promotion')),
                ('promotion_percentage', models.SmallIntegerField(verbose_name='percentage of promotion')),
            ],
            options={
                'verbose_name': 'promotion',
                'verbose_name_plural': 'promotions',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_buy', models.DateField(null=True, verbose_name='timestamp of buy')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=8, null=True, verbose_name='total price')),
                ('paid_with_bonuses', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='paid with bonuses')),
                ('is_paid', models.BooleanField(default=False, verbose_name='paid')),
                ('goods_is_received', models.BooleanField(default=False, verbose_name='goods received')),
            ],
            options={
                'verbose_name': 'purchase',
                'verbose_name_plural': 'purchases',
            },
        ),
        migrations.CreateModel(
            name='PurchaseGoods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=1, verbose_name='amount')),
            ],
            options={
                'verbose_name': 'goods in purchase',
                'verbose_name_plural': 'goods in purchases',
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=1024, unique=True, verbose_name='name goods')),
                ('photo', models.ImageField(default='default/goods.png', upload_to='goods/%Y/%m/%d/', verbose_name='photo of goods')),
                ('type_goods', models.PositiveSmallIntegerField(choices=[(0, 'other'), (1, 'medicine'), (2, 'medical products'), (3, 'cosmetics'), (4, 'hygiene'), (5, 'supplements/vitamins')], default=0, verbose_name='type goods')),
                ('goods_info', models.CharField(max_length=2048, verbose_name='info of goods')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='price')),
                ('amount_in_stock', models.PositiveSmallIntegerField(default=0, verbose_name='amount in stock')),
            ],
            options={
                'verbose_name': 'goods',
                'verbose_name_plural': 'goods',
                'constraints': [models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='price_goods_CK')],
            },
        ),
        migrations.CreateModel(
            name='GoodsReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='time of creation')),
                ('date_change', models.DateTimeField(auto_now=True, verbose_name='time of last change')),
                ('message', models.TextField(max_length=4096, verbose_name='message')),
                ('grade', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='grade')),
                ('goods_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods_review_fk', to='pharmacy.goods', verbose_name='review of goods')),
            ],
            options={
                'verbose_name': 'review',
                'verbose_name_plural': 'reviews',
            },
        ),
    ]
